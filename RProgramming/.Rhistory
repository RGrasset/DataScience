install.packages(slidify)
is.installed <- function(mypkg) is.element(mypkg, installed.packages()[,1])
is.installed('devtools')
install.packages("devtools")
library(devtools);
install_github('ramnathv/slidify', ref = 'dev');
is.installed(slidify)
is.installed('slidify'')
dsq
is.installed('slidify')
library(devtools);
install_github('ramnathv/slidify', ref = 'dev');
is.installed('slidify')
is.installed('slidify')
is.installed <- function(mypkg) is.element(mypkg, installed.packages()[,1])
is.installed('devtools')
is.installed('slidify')
install.packages('ggplot2')
source("http://bioconductor.org/biocLite.R")
biocLite()
find_rtools()
install.packages("KernSmooth")
search()
library(KernSmooth)
setwd("~/Data/RProgramming")
source("myfunction.R")
myfunction(1)
x<- c(4, "a",TRUE)
class(x)
rbind
?rbind
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
x <- 1:4
y<-2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10<-4]
x[x>10]<-4
x
read.csv("hw1_data.csv"")
e
read.csv(hw1_data.csv)
x <- read.csv("hw1_data.csv")
x
x[1:2,]
dim(x)
x[152:153,]
x[47,]
bad <-is.na(x[,1])
bad2 <- bad[bad==TRUE]
dim(bad2)
bad2
lenght(bad2)
length(bad2)
ozone<-x[,1]
ozone
bad<-is.na(ozone)
ozonegood<-ozone[!bad]
ozonegood
mean(ozonegood)
bad<-x[,1]>31 AND x[,4]>90
bad<-x[,1]>31+x[,4]>90
bad<-x[,1]>31 x[,4]>90
bad<-x[,1]>31
bad2<-x[,4]>90
solar=x[,2]
badS=solar[bad | bad2]
badS
goodS<-badS[!is.na(badS)]
goodS
mean(goodS)
badS=solar[bad & bad2]
badS
goodS<-badS[!is.na(badS)]
goodS
mean
mean(goodS)
good<-x[,5]==6
T<- x[,4]
goodT<-T[good]
goodT
mean(goodT)
good<-x[,5]==5
goodT<-T[good]
goodT
max(goodT)
ozone<-x[,1]
goodO<-ozone[good]
goodO
max(goodO)
O <- goodO[!is.na(goodO)]
max(O)
x <- c(4,"a",TRUE)
y <- x
class(y)
z<- c(1,2,3)
cbind(y,z)
y <- 1:4
z <- 2:3
y+z
class(y+z)
install.packages(swirl)
install.packages("swirl"")
install.packages("swirl")
library(swirl)
View(myfunction)
ls()
rm(list=ls())
install_from_swirl("R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div z/my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2,3,4)+c(0,10)
c(1, 2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd(/testdir)
setwd(testdir)
setwd("testdir"")
""
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename(from = "mytest.R" to="mytest2.R")
file.rename(from = "mytest.R" to ="mytest2.R")
file.rename(from = mytest.R to =mytest2.R)
?file.rename
file.rename("mytest.R" ,"mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder2","folder2")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2/testdir3",recursive=TRUE)
info()
dir.create(file.path('testdir2','testdir3'), recursive =TRUE)
ls
play()
ls()
getwd()
list.files()
nxt()
setwd(old.dir)
bye()
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
':'
?':'
seq(1,20)
seq(1,20,by=0.5)
seq(0, 10, by=0.5)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times =
| 40)
rep(0, times =40)
rep(c(0, 1, 2), times = 10)
Try rep(c(0, 1, 2), each = 10)
rep(c(0, 1, 2), each = 10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name<-c(mychar,"Romain")
my_name<-c(my_char,"Romain")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep ="-")
x<-c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y, z), 100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[0:10]
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,
| 10)]
x[-c(2,
10)]
vect <- c(foo = 11, bar = 2, norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
data.frame(patients, my_matrix)
my_data<-  data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
class(c(4,TRUE))
x <- list(2, "a", "b", TRUE)
x[[2]]
x[[1]]
class(x[[1]])
1:4+2:3
class(1:4+2:3)
x <- c(3, 5, 1, 10, 12, 6)
x[x%in% 1:5] <-0
x
